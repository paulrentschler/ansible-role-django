---
# Setup the remote database on Debian-based systems


- name: "database setup : remote DB : create the database"
  community.mysql.mysql_db:
    name: "{{ django_db_name }}"
    state: present
    login_unix_socket: "{{ django_db_socket }}"
  register: _django_mysql_db_created
  become: yes
  when: django_db_engine == 'django.db.backends.mysql'
  delegate_to: "{{ django_db_host|default(omit) }}"
  tags:
    - django_install

- name: "database setup : remote DB : create the user and grant permissions"
  community.mysql.mysql_user:
    user: "{{ django_db_user }}"
    password: "{{ django_db_password }}"
    host: "{% if django_db_port != '' %}{{ ansible_host|default('localhost') }}{% else %}localhost{% endif %}"
    priv: "{{ django_db_name }}.*:ALL"
    tls_requires:
      ssl:
    state: present
    login_unix_socket: "{{ django_db_socket }}"
  become: yes
  when: django_db_engine == 'django.db.backends.mysql'
  delegate_to: "{{ django_db_host|default(omit) }}"
  tags:
    - django_config
    - django_install

# - name: "database setup : ensure the database isn't read only"
#   community.mysql.mysql_variables:
#     variable: read_only
#     value: 0
#   register: _django_mysql_read_only_fix
#   become: yes
#   changed_when: _django_mysql_read_only_fix.msg == "Variable change succeeded prev_value=ON"
#   tags:
#     - django_install

